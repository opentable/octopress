<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: PuppetConf 2014 | OpenTable Tech UK Blog]]></title>
  <link href="http://tech.opentable.co.uk/blog/categories/puppetconf-2014/atom.xml" rel="self"/>
  <link href="http://tech.opentable.co.uk/"/>
  <updated>2015-02-07T14:21:51+00:00</updated>
  <id>http://tech.opentable.co.uk/</id>
  <author>
    <name><![CDATA[OpenTable]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PuppetConf 2014 - Part 3]]></title>
    <link href="http://tech.opentable.co.uk/blog/2014/10/06/puppetconf-2014-part-3/"/>
    <updated>2014-10-06T13:43:36+01:00</updated>
    <id>http://tech.opentable.co.uk/blog/2014/10/06/puppetconf-2014-part-3</id>
    <content type="html"><![CDATA[<h2>Day 2</h2>

<p>This is our summary of PuppetConf 2014. In our <a href="http://tech.opentable.co.uk/blog/2014/10/06/puppetconf-2014-part-2/">previous post</a> we gave an overview of the first day of the conference. This post will provide an
overview of the final day.</p>

<p>There were even more inspiring keynotes and lots more talks which have given us plenty of ideas to go home and think about.</p>

<h3>Key Notes</h3>

<h4>Animating the Puppet: Creating a Culture of Puppet Adoption &ndash; Dan Spurling (<a href="https://twitter.com/spurling">@spurling</a>), Getty Images &ndash; <a href="http://www.slideshare.net/PuppetLabs/keynote-animating-the-puppet-creating-a-culture-of-puppet-adoption-puppetconf-2014">Slides</a></h4>

<div style="float:right;margin:0 10px 10px 10px;width:50%">
  <img src="http://tech.opentable.co.uk/images/posts/puppetconf-dan.jpg">
</div>


<p>Dan Spuring, VP of Tech Services at Getty came out of the gate with a strong message. His <a href="http://www.urbandictionary.com/define.php?term=GSD">GSD</a> t-shirt
giving you a clear understanding of who he is. His talk about creating a culture of Puppet adoption at his company was a great story of how challenging it
can be to move various business units with projects of various ages to a configuration-management (with Puppet) ethos.</p>

<p>I think it is good to hear that they are rolling cm out into that huge backlog of legacy infrastructure that we all try to pretend isn’t there.
How do you make it integrate into existing processes? How do you sell the DevOps message at the same time as introducing a tool like Puppet into the mix as
part of that message? Dan gave some thoughts on this and it was good to hear some of that from someone who appears to be on the other side of that challenge.</p>

<p>One of the analogies that he used I that found quite useful was that undertaking a project like this is like moving a boulder. It requires an executive sponsor to
get the thing moving at all and then it requires everyone pulling in the same direction if it’s ever doing to get anywhere.</p>

<p>The big take-away was that you need to puppetize right away &ndash; that you can’t wait for the right environment or conditions to start doing it, you just need
start now and demonstrate it. This echo’s the Continuous Delivery ideal of &ldquo;if it hurts, then do it more often&rdquo;.</p>

<h4>Decentralize Your Infrastructure &ndash; Alan Green, Sony Computer Entertainment America &ndash; <a href="http://www.slideshare.net/PuppetLabs/keynote-decentralize-your-infrastructure-alan-green-sony-computer-entertainment-america">Slides</a></h4>

<div style="float:right;margin:0 10px 10px 10px;width:50%">
  <img src="http://tech.opentable.co.uk/images/posts/puppetconf-alan.jpg">
</div>


<p>Alan’s talk posed an interesting argument: decentralise and let your developers choose the tools and services that they want &ndash; just make it easy for them to
do so. This obviously flies in the face of conventional sysadmin wisdom of trying to centralise, standardise and control everything but for an organisation the
size of scale of SCEA this is just never going to work. Sony has many different studios, each has their own special requirements and tooling that they need to
try and support.</p>

<p>The story of the interaction with these studios is a great classic sysadmin story that is worth repeating. It starts with something we have all heard before &ldquo;I
need to X right now because it’s preventing me from releasing this game on time”. The reaction here is to either say Yes and risk burning out your people getting
it done or No risk your career if the release date gets pushed. As a sysadmin you&rsquo;re on the back-foot at this point &ndash; you pretty much have to do whatever it takes.
If you decentralize your infrastructure you get to turn the tables "No I don’t have tool X but we do have tool Y and Z that will meet your needs&rdquo;. This gives
the engineers/managers the choice to make rather than you &ndash; they can go out on their own and implement their first choice tool and it will take a bit longer or
they can have something supported by the team right now. Alan also made a interesting call-back to Kate Matsudaira’s keynote of the previous day when he said that
it’s all about honesty and trust. Be truthful with your engineers about what you are capable of achieving or not.</p>

<p>This is the sort of thing we do here at OpenTable and it’s been working very well. You need to design puppet to be as flexible as possible and to support those
teams that need support in their puppet implementations. Having a diverse set of tools is not a bad thing &ndash; especially when you are dealing with creative people &ndash;
it keeps them creative and you can push that creativity back into the product. You&rsquo;re also decentralising control, giving teams the ability to move their
infrastructure as fast as they need to move the product &ndash; meaning that your business is going to move faster get meet it’s ROI (because managers care about that
sort of thing)</p>

<h4>Q&amp;A with Luke Kanies</h4>

<div style="float:right;margin:0 10px 10px 10px;width:50%">
  <img src="http://tech.opentable.co.uk/images/posts/puppetconf-luke-2.jpg">
</div>


<p>The last &ldquo;keynote&rdquo; of the conference brought Luke back to the stage for a Q&amp;A with the audience. Allowing people to text in questions live led to some amusement
and once the silly questions were out of the way ( what is your favourite book?, what is your favourite animal? ) we got down to some of the big questions that
people really wanted answers to.</p>

<p><strong>Q</strong>: What is the roadmap for Puppet Apps?<br/>
<strong>A</strong>: I would be surprised if we release more than one per quarter, I’d rather put out four than 20, with five releases for each app. We are a small company,
and we have to try not to get overextended to the point where we can’t evolve the apps. They have to be evolved to be successful.</p>

<p>This seems fair, they is a lot of work involved in putting together something that is polished and tested and ready for market.</p>

<p><strong>Q</strong>: What is the future of Open Source Puppet?<br/>
<strong>A</strong>: My goal is to keep the two products complementary, and to understand each is used for different reasons .. We’re trying to change how the market works
and thinks and this is done better with software that’s absolutely everywhere.</p>

<p>He probably gets asked this all the time. The more features that are poured into Enterprise it would be easy to think that the OSS efforts are diminishing and
that there is even motivation for them to close-source. My conversations with various parties suggest that this is far from the case and I think that open source
puppet community will continue to be vibrant for a long time yet.</p>

<p><strong>Q</strong>: Where does Puppet fit into environments that don’t require convergence, where instead of adjusting the container you just re-provision?<br/>
<strong>A</strong>: Containers are a result of 10 to 15 years of investment in virtualization, so it’s easy to switch from the virtualization world to the containers world —
but a container can’t do everything.</p>

<p>This is a very pragmatic argument and he’s right. Containers are a very exciting space right now and there is no doubt that it will be a big part of the future
but the community and tooling needs to mature and there is also going to be a very long tail of “traditional” virtualisation technologies around for a very
long time yet.</p>

<p><strong>Q</strong>: Are there any plan to integration remote orchestration into Puppet?<br/>
<strong>A</strong>: It’s an area we are investing heavily in, and I’m personally investing heavily in. … I’m a big fan of small independent tools that do one job and do it
correctly, rather than big huge tools that do a lot. I want to make our orchestration better, not by adding to Puppet, but by adding tools. I don’t want to add
more functionality to Puppet, but add functionality to the Puppet ecosystem.</p>

<p>MCollective has been in the puppet eco-system for a while now. It’s going to be getting a lot more attention over the next year so I am very excited to see how
this evolves.</p>

<h3>Tech Talks</h3>

<h4>Continuous Integration for Infrastructure as Code &ndash; Gareth Rushgrove, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/continuouslytestinginfrastructure">Slides</a></h4>

<p>Arguable one of the most interesting talks of the conference. This talk took the idea of infrastructure TDD to the next level. What would it be like to be able
to test common expectations of your infrastructure (monitoring, backups, machines in each region, budget limitations). There are lots of built-in assumptions
that we make about of infrastructure and a lot of business decisions that have been difficult to codify. This talk raising the challenge of providing a complete
API for your infrastructure and then testing against it.</p>

<ul>
<li>usual tools (serverspec, wrecker)

<ul>
<li>for containers</li>
<li>TDD</li>
</ul>
</li>
<li>Policy Driven development</li>
<li>Infrastructure as an API</li>
<li>common expectations (budget etc)</li>
<li>clojure</li>
<li>can you generate serverspec tests from PuppetDB data??? &ndash; yes!</li>
<li>rake test::role::web_server</li>
<li><a href="https://github.com/garethr/serverspec-puppetdb">serverspec-puppetdb</a></li>
<li>rspec outputter &ndash; monitoring &ndash; using it as a bridge</li>
</ul>


<h4>Experiences from Running Masterless Puppet &ndash; Erik Dalén, Spotify &ndash; <a href="http://www.slideshare.net/PuppetLabs/puppetconf-2014-1">Slides</a></h4>

<p>Erik (this years MVP) always has a lot of interesting insights about Puppet from scaling out the infrastructure at Spotify and this talk is no exception.
This talk explains their decision to go masterless and the challenges in doing so. It seems that they have put in a lot of work in writing services to manage
things like hiera data and managing secrets. It is great to see how this approach scales, one can only hope that future work by PuppetLabs with the Apps project
improves this as option for most people.</p>

<ul>
<li>scaling workflow rather than puppet masters</li>
<li>complex modules dependencies make it easy to break things</li>
<li>r10k is still a fixed environment (upgrade apache and progress at the same time)</li>
<li>they use their own tool for secret management</li>
</ul>


<h4>Getting Started with Puppet on Windows &ndash; Josh Cooper, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/puppetconf2014-gettingstartedwindowsfinal140925174855phpapp01">Slides</a></h4>

<p>This was a basic introduction to Puppet on windows. It covers what is possible and the many edge cases that you might run into. It was also the time to
re-announce the recent support for 64-bit puppet on windows. Thanks to Josh we also got a shout-out for the work we have done with our
<a href="forge.puppetlabs.com/opentable">forge modules</a></p>

<ul>
<li>Basic intro</li>
<li>powershell, registry_key</li>
<li>installing &ndash; mention of 64-bit</li>
<li>puppet resource</li>
<li>supported modules</li>
<li>community modules (inc OT)</li>
<li>geppetto vs VS</li>
<li>problems

<ul>
<li>quotes</li>
<li>case sensitivity</li>
<li>UAC</li>
</ul>
</li>
</ul>


<h4>Test Driven Development with Puppet &ndash; Gareth Rushgrove, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/tddforpuppet-39598529">Slides</a></h4>

<p>This is Gareth’s basic introduction to TDD with Puppet. It covers the latest tooling and how to build yourself a recent CI pipeline for your modules so that
they are forge-ready. Useful for anyone who is new to the space or who hasn’t released any modules yet.</p>

<ul>
<li>TDD</li>
<li><a href="http://rspec-puppet.com/">rspec-puppet</a></li>
<li><a href="http://puppet-lint.com/">puppet-lint</a></li>
<li><a href="https://github.com/guard/guard-rspec">guard</a></li>
<li><a href="https://github.com/gds-operations/puppet-syntax">puppet-syntax</a></li>
<li><a href="https://github.com/puppetlabs/beaker">beaker</a> (vagrant + serverspec)</li>
<li><a href="https://travis-ci.org/">travis</a></li>
<li><a href="https://github.com/garethr/puppet-module-skeleton">puppet module skeleton</a></li>
</ul>


<h4>Using Docker with Puppet &ndash; James Turnbull, Kickstarter &ndash; <a href="http://www.slideshare.net/PuppetLabs/using-docker-with-puppet-puppetconf-2014">Slides</a></h4>

<p>James gave a good introduction to Docker. Showing off the things that Docker is good at and also detailing some of the things that it isn’t.
He also showed how and when to use Puppet in this environment. For anyone moving from a  traditional set-up to a Docker based one then this talk is a must.</p>

<ul>
<li>what is docker</li>
<li>dockerfile</li>
<li>dockerhub</li>
<li>what it does</li>
<li>what it doesn’t

<ul>
<li>low-level</li>
<li>resource dependencies</li>
<li>what runs, when</li>
</ul>
</li>
<li>don’t install puppet inside your containers</li>
<li>puppet apply</li>
</ul>


<h4>Tools and Virtualization to Manage our Operations at Puppet Labs &ndash; Cody Herriges, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/tools-and-virtualization-to-manage-our-operations-at-puppet-labs-puppetconf-2014">Slides</a></h4>

<p>Cody, is a member of the PuppetLabs operations team and wow they seriously have their work cut out for them. They have to manage pretty much every network,
vm technology and cloud platform available. This gives some of the challenges in doing that and some of the tools they have built to help them in
achieving that.</p>

<ul>
<li>all the VM technologies</li>
<li>all the cloud platforms</li>
<li>all the network providers</li>
<li>automation</li>
<li>monitoring (ELK)</li>
<li>vmpooler (<a href="https://github.com/puppetlabs/vmpooler">https://github.com/puppetlabs/vmpooler</a>)</li>
</ul>


<h3>Other Talks</h3>

<ul>
<li>The Switch as a Server &ndash; Leslie Carr, Cumulus Networks &ndash; <a href="http://www.slideshare.net/PuppetLabs/the-switch-as-a-server-puppetconf-2014">Slides</a></li>
<li>Intro to Using MCollective &ndash; Devon Peters, Jive Software &ndash; <a href="http://www.slideshare.net/PuppetLabs/intro-to-using-mcollective-puppetconf-2014">Slides</a></li>
<li>How Puppet Enables the Use of Lightweight Virtualized Containers &ndash; Jeff McCune, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/how-puppet-enables-the-use-of-lightweight-virtualized-containers-jeff-mc-cune-puppet-labs">Slides</a></li>
<li>Server Locality Using Razor and LLDP &ndash; Jonas Rosland, EMC &ndash; <a href="http://www.slideshare.net/PuppetLabs/server-locality-withrazorandlldp">Slides</a></li>
<li>Node Classifier Fundamentals &ndash; Dan Lidral-Porter, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/node-classifier-fundamentals-dan-lidralporter-puppet-lab">Slides</a></li>
<li>What&rsquo;s Next for Puppet Enterprise &ndash; Lindsey Smith, Puppet Labs &amp; Susannah Axelrod, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/whats-next-for-puppet-enterprise-and-beyond">Slides</a></li>
<li>The DevOps Field Guide to Cognitive Biases (2nd Edition) &ndash; Lindsay Holmwood, Bulletproof Networks</li>
<li>Delegated Configuration with Multiple Hiera Databases &ndash; Robert Terhaar, Atlantic Dynamic &ndash; <a href="http://www.slideshare.net/PuppetLabs/rob-terhaar-puppetconf2014">Slides</a></li>
<li>Understanding OpenStack Deployments &ndash; Chris Hoge, OpenStack Foundation &ndash; <a href="http://www.slideshare.net/PuppetLabs/understanding-openstack-deployments-puppetconf-2014">Slides</a></li>
<li>Implementing Puppet at a South American Government Agency, Challenges and Solutions &ndash; Pablo Wright, Edrans &ndash; <a href="http://www.slideshare.net/PuppetLabs/implementing-puppet-at-a-south-american-government-agency-challenges-and-solutions-pablo-wright-edrans">Slides</a></li>
<li>Infrastructure as Software &ndash; Dustin J. Mitchell, Mozilla, Inc. &ndash; <a href="http://www.slideshare.net/PuppetLabs/infrastructure-as-software-dustin-j-mitchell-mozilla-inc?">Slides</a></li>
<li>Dev to Delivery with Puppet &ndash; Sam Bashton, Bashton Ltd. &ndash; <a href="http://www.slideshare.net/PuppetLabs/dev-to-delivery-with-puppet-sam-bashton-bashton-ltd">Slides</a></li>
<li>Get Puppet Enterprise into Your Company &ndash; Iko Saadhoff, KPN</li>
<li>The Puppet Master on the JVM &ndash; Chris Price, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/the-puppet-master-on-the-jvm-puppetconf-2014">Slides</a></li>
<li>The Grand Puppet Sub-Systems Tour &ndash; Nicholas Fagerlund, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/the-grand-puppet-subsystems-tour-nicholas-fagerlund-puppet-labs">Slides</a></li>
<li>Building Community: One Puppet Module at a Time &ndash; Diane Mueller, Red Hat &amp; Diego Castro, Getup Cloud</li>
<li>Puppet for Everybody! &ndash; Federated and Hierarchical Puppet Enterprise &ndash; Chris Bowles, University of Texas at Austin &ndash; <a href="http://www.slideshare.net/PuppetLabs/puppet-for-everybody-federated-and-hierarchical-puppet-enterprise-puppetconf-2014">Slides</a></li>
<li>Puppetizing Multitier Architecture &ndash; Reid Vandewiele, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/puppetizing-multitier-architecture-puppetconf-2014">Slides</a></li>
<li>The Evolving Design Patterns of Puppet Enterprise &ndash; Jonathan Spinks, Sourced Group &amp; John Painter, Sourced Group &ndash; <a href="http://www.slideshare.net/PuppetLabs/the-evolving-design-patterns-of-puppet-enterprise-jonathan-spinks-sourced-group-john-painter-sourced-group">Slides</a></li>
<li>From Development to Testing to Deployment with Puppet Enterprise and Microsoft Azure &ndash; Ross Gardler, Microsoft Open Technologies, Inc. &ndash; <a href="http://www.slideshare.net/PuppetLabs/from-development-to-testing-to-deployment-with-puppet-enterprise-and-microsoft-azure-ross-gardler-microsoft-open-technologies-inc">Slides</a></li>
<li>Exploring the Final Frontier of Data Center Orchestration: Network Elements &ndash; Jason Pfeifer, Cisco &ndash; <a href="http://www.slideshare.net/PuppetLabs/puppetconf-cisco">Slides</a></li>
<li>An In-Depth Introduction to the Puppet Enterprise Console &ndash; Ruth Linehan, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/an-indepth-introduction-to-the-puppet-enterprise-console-ruth-linehan-puppet-labs">Slides</a></li>
<li>Packaging Software, Puppet Labs Style &ndash; Melissa Stone, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/packaging-software-puppet-labs-style-puppetconf-2014">Slides</a></li>
<li>Orchestrated Functional Testing with Puppet-spec and Mspectator &ndash; Raphaël Pinson, Camptocamp &ndash; <a href="http://www.slideshare.net/PuppetLabs/puppetconf-mspectator-talk">Slides</a></li>
<li>Fully Automate Application Delivery with Puppet and F5 &ndash; Colin Walker, F5 &ndash; <a href="http://www.slideshare.net/PuppetLabs/i-control-rest-presentation-for-puppet">Slides</a></li>
<li>Managing the File and Exposing the API &ndash; Christopher Webber, Chef Software</li>
<li>Case Study: Developing a Vblock Systems Based Private Cloud Platform with Puppet and VMware vCloud Suite &ndash; Peng Liu &amp; Paul Harb, VCE &ndash; <a href="http://www.slideshare.net/VCE_Computing/puppet-confvce-preso20140925">Slides</a></li>
<li>Got Logs? Get Answers with Elasticsearch ELK &ndash; Jordan Sissel, Elasticsearch &ndash; <a href="http://www.slideshare.net/PuppetLabs/got-logs-get-answers-with-elasticsearch-elk-puppetconf-2014">Slides</a></li>
<li>Managing Network Security Monitoring at Large Scale with Puppet &ndash; Michael Pananen &amp; Chris Nyhuis, Vigilant Technology Services &ndash; <a href="http://www.slideshare.net/PuppetLabs/managing-network-security-monitoring-at-large-scale-with-puppet-puppetconf-2014">Slides</a></li>
<li>Building and Testing from Scratch a Puppet Environment with Docker &ndash; Carla Souza, Reliant &ndash; <a href="http://www.slideshare.net/PuppetLabs/puppet-conf2014">Slides</a></li>
</ul>


<h3>Other Interesting Links</h3>

<ul>
<li><a href="http://blog.superk.org/2014/09/puppet-conf-2014-review.html">http://blog.superk.org/2014/09/puppet-conf-2014-review.html</a></li>
<li><a href="http://www.olindata.com/blog/2014/09/first-impressions-new-cfacter">http://www.olindata.com/blog/2014/09/first-impressions-new-cfacter</a></li>
<li><a href="http://cwebber.net/blog/2014/09/26/i-am-not-a-coder/">http://cwebber.net/blog/2014/09/26/i-am-not-a-coder/</a></li>
<li><a href="http://www.slideshare.net/PuppetLabs/tag/puppetconf-2014">http://www.slideshare.net/PuppetLabs/tag/puppetconf-2014</a></li>
<li><a href="http://puppetlabs.com/blog/puppetconf-2014-day-1-tips-treats-and-tweets">http://puppetlabs.com/blog/puppetconf-2014-day-1-tips-treats-and-tweets</a></li>
<li><a href="http://puppetlabs.com/blog/puppetconf-2014-day-2-luke-q-and-a-devops-containers-and-more">http://puppetlabs.com/blog/puppetconf-2014-day-2-luke-q-and-a-devops-containers-and-more</a></li>
<li><a href="http://puppetlabs.com/blog/puppetconf-2014-day-1-tips-treats-and-tweets">http://puppetlabs.com/blog/puppetconf-2014-day-1-tips-treats-and-tweets</a></li>
<li><a href="http://puppetlabs.com/blog/puppet-conf-2014-wrap-up">http://puppetlabs.com/blog/puppet-conf-2014-wrap-up</a></li>
<li><a href="https://forge.puppetlabs.com/approved/criteria">https://forge.puppetlabs.com/approved/criteria</a></li>
<li><a href="http://puppetlabs.com/blog/puppet-server-bringing-soa-to-a-puppet-master-near-you">http://puppetlabs.com/blog/puppet-server-bringing-soa-to-a-puppet-master-near-you</a></li>
<li><a href="https://github.com/puppetlabs/puppetlabs-strings/">https://github.com/puppetlabs/puppetlabs-strings/</a></li>
<li><a href="http://bitergia.dev.puppetlabs.com/browser/">http://bitergia.dev.puppetlabs.com/browser/</a></li>
<li><a href="https://www.flickr.com/photos/pleia2/sets/72157648049231891">https://www.flickr.com/photos/pleia2/sets/72157648049231891/</a></li>
<li><a href="http://theshipshow.com/2014/10/the-pulse-of-puppetconf-2014/">http://theshipshow.com/2014/10/the-pulse-of-puppetconf-2014/</a></li>
<li><a href="http://www.theregister.co.uk/2014/09/23/puppetconf_2014_keynote/">http://www.theregister.co.uk/2014/09/23/puppetconf_2014_keynote/</a></li>
<li><a href="http://www.infoq.com/news/2014/09/puppet-approved-modules">http://www.infoq.com/news/2014/09/puppet-approved-modules</a></li>
<li><a href="https://github.com/ferventcoder/puppet-chocolatey-presentation">https://github.com/ferventcoder/puppet-chocolatey-presentation</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PuppetConf 2014 - Part 2]]></title>
    <link href="http://tech.opentable.co.uk/blog/2014/10/06/puppetconf-2014-part-2/"/>
    <updated>2014-10-06T12:30:58+01:00</updated>
    <id>http://tech.opentable.co.uk/blog/2014/10/06/puppetconf-2014-part-2</id>
    <content type="html"><![CDATA[<h2>Day 1</h2>

<p>This is our summary of PuppetConf 2014. In our <a href="http://tech.opentable.co.uk/blog/2014/10/06/puppetconf-2014-part-1/">previous post</a> we gave an overview of the contributor summit. This post will provide an overview
of the first day of PuppetConf.</p>

<p>As you might expect there were great keynotes with plenty of announcements and too many talks for us to attend. We have provided an outline for all the talks
we did attend and links to those we didn&rsquo;t.</p>

<h3>KeyNotes</h3>

<h4>Nearly a Decade of Puppet: What We’ve Learned and Where We’re Going Next &ndash; Luke Kanies, PuppetLabs &ndash; <a href="http://www.slideshare.net/PuppetLabs/luke-kanies-keynote-nearly-a-decade-of-puppet-what-weve-learned-and-where-were-going-next-puppetconf-2014">Slides</a></h4>

<div style="float:right;margin:0 10px 10px 10px;width:50%">
  <img src="http://tech.opentable.co.uk/images/posts/puppetconf-luke-1.jpg">
</div>


<p>The big keynote of the event to kick off the first day from the author of Puppet himself. This was obviously going to be a tweet worthy affair full of photos
and big announcements and it did not disappoint.</p>

<p>Native Clients (CFactor + C++ rewrite of agents) are coming in the very near future. This is not only a matter of improving the performance for existing users part
of philosophy of PuppetLabs to become ubiquitous across as many devices and platforms as possible. This is one of those improvements that is really setting up
PuppetLabs for the future.</p>

<p>Puppet Server (a.k.a the Clojure rewrite). This is PuppetLabs big move away from Ruby on onto the JVM. Being on the JVM means they can slowly rewrite the
codebase while also maintaining compatibility thanks to JRuby. They have gained a lot of experience with Clojure thanks to the PuppetDB &amp; TrapKeeper projects and given how
successful that project has been it has helped ease many of the fears people have in moving the JVM. Puppet Server is also a self contained application so there
is no longer any need to worry about the whole apache/passanger yak shave. There was even a demo on the metrics that are now exposed by Puppet Server &ndash; yes
you can now plug Puppet into graphite.</p>

<p>There have been plenty of follow-ups on this that you might be interested in reading:</p>

<ul>
<li><a href="http://www.infoworld.com/article/2687553/devops/puppet-server-drops-ruby-for-clojure.html">http://www.infoworld.com/article/2687553/devops/puppet-server-drops-ruby-for-clojure.html</a></li>
<li><a href="http://puppetlabs.com/blog/puppet-server-bringing-soa-to-a-puppet-master-near-you">http://puppetlabs.com/blog/puppet-server-bringing-soa-to-a-puppet-master-near-you</a></li>
<li><a href="http://puppetlabs.com/blog/new-era-application-services-puppet-labs">http://puppetlabs.com/blog/new-era-application-services-puppet-labs</a></li>
<li><a href="https://github.com/puppetlabs/puppet-server">https://github.com/puppetlabs/puppet-server</a></li>
<li><a href="http://www.informationweek.com/cloud/software-as-a-service/puppet-servers-big-revamp/d/d-id/1315934">http://www.informationweek.com/cloud/software-as-a-service/puppet-servers-big-revamp/d/d-id/1315934</a></li>
</ul>


<p>Puppet Apps was the next big announcement. Puppet Apps is actually a fantastic piece of marketing around the idea that they are refactoring to a more micro-services
style approach &ndash; splitting up the monolith that is currently the Puppet master into smaller applications that have their own release cadence and can be scaled
separately.</p>

<p>The first announcement from the &ldquo;Apps&rdquo; initiative is Puppet Node Manager the new node classifier which will roll out in the Q1 of 2015 as an add-on
to Puppet Enterprise. Given that Puppet has allowed external node classifiers to be written for a long time now (and there are many open source ones out there)
it is good to see PuppetLabs stepping up and trying to own this more and improve the experience.</p>

<p><a href="http://puppetlabs.com/about/press-releases/puppet-labs-kicks-puppetconf-announcements-major-updates-industrys-most-popular">http://puppetlabs.com/about/press-releases/puppet-labs-kicks-puppetconf-announcements-major-updates-industrys-most-popular</a></p>

<p>Another huge announcement (of which we got a preview at the contributors summit) was Puppet Approved Modules. Luke and the rest of PuppetLabs have the huge
idea that 80% of what you&rsquo;re going to want to configure on your systems should be possible with what is available on the forge. Some of the bigger pieces have
been covered by the module engineers at PuppetLabs under the existing Puppet Support Modules program. This has been fantastic in driving for consensus around
configuration making installation of certain products (like apache) easier for people.</p>

<p>The reality is that if PuppetLabs want to achieve its 80% goal they are are not going to be able to do that with the engineers and resources they have
available to them. Nor do they have the expertise to know about all the software out there. This is where the Puppet Approved program comes in. Its aim is to
provide the same standard of quality that you see in the Supported modules but for modules written by the community. It is easy for users of the forge to
be able to pick out high quality, actively maintained modules and know what they are getting. As a user this is very exciting and as a module author, while
there will be plenty of work for me to do, I am glad that the community is moving in this direction.</p>

<p>Speaking of the community, Luke used this opportunity to announce the finalists and the winner of the Most Valued Puppetier (MVP) competition.</p>

<p>Finalists:</p>

<ul>
<li>Daniele Sluijters (<a href="https://twitter.com/daenney">@daenney</a>)</li>
<li>Felix Frank</li>
<li>Tim Sharp (<a href="https://twitter.com/rodjek">@rodjek</a>)</li>
</ul>


<p>Winner</p>

<ul>
<li>Erik Dalén (<a href="(https://twitter.com/erik_dalen">@erik_dalen</a>)</li>
</ul>


<p>The last part of the keynote was talking about some of the wider thoughts as we look to the next ten years of Puppet and what comes next. There is going to be
more focus on the ubiquity of Puppet, on devices more network device partners and solving problems like orchestration. The next ten years is going to be about
taking Puppet beyond the single node. We are already thinking of machines as cattle and not pets &ndash; Puppet should also better reflect that change.</p>

<p>I for one am very excited by all this and look forward to seeing what comes out over the next few years.</p>

<h4>The Phoenix Project: Lessons Learned &ndash; Gene Kim, IT Revolution Press &ndash; <a href="http://www.slideshare.net/PuppetLabs/keynote-the-phoenix-project-lessons-learned-puppetconf-2014">Slides</a></h4>

<div style="float:right;margin:0 10px 10px 10px;width:50%">
  <img src="http://tech.opentable.co.uk/images/posts/puppetconf-gene.jpg">
</div>


<p>This was a great overview of Gene’s research of DevOps and how that intersects with high performing organisations. There were many interesting results that came
out the the survey that he did in joint co-operation with PuppetLabs many of which he shared during this talk.</p>

<p>I think the one that stands out and often tweeted is the following:</p>

<p><em>&ldquo;High performers have 30x more deployments and 8000x faster lead time, 2x the change success rate and 12x faster recovery&rdquo;</em></p>

<p>Read that again &ndash; wow.</p>

<p>This talk as one might expect was all about DevOps, its history, why and how it works. Even if you&rsquo;re fully familiar with the whole culture of DevOps there are
plenty of things to be learnt from this keynote and I look forward to re-watching it when the video lands on YouTube.</p>

<h4>Trust Me &ndash; Kate Matsudaira, Popforms &ndash; <a href="http://www.slideshare.net/PuppetLabs/keynote-trust-me-puppetconf-2014">Slides</a></h4>

<div style="float:right;margin:0 10px 10px 10px;width:50%">
  <img src="http://tech.opentable.co.uk/images/posts/puppetconf-kate.jpg">
</div>


<p>Following the theme of culture, Kate’s talk was a refreshing look at the culture of trust within an organisation. Far from being the usual &ldquo;this is what my
company culture looks like&rdquo; sort-of talk, this talk had a lot of practical advice. Discussion of how to build relationships, how to raise your profile within
the organisation and how to improve yourself as a manger. &ldquo;If you use your 1-on-1 to talk about status, you&rsquo;re wasting time. Get to know your boss, solicit
feedback on your performance.&rdquo; &ndash; Great advice like this is littered throughout the talk.</p>

<p>She says that trust is like money and that you need to be wise in how you spend that trust. Most organisations are not a meritocracy and we need to stop thinking that they are. Your relationships within the organisation are just as important as the quality of the work that you do.  There needs to be balance between these two things &ndash; are your relationships as good as the work that you do?</p>

<p>If you want to improve yourself and advance your career, either as an engineer or as a manager then you should absolutely take the time to listen to this talk.</p>

<p><strong>Bonus</strong>: the slides rock! (I won’t spoilt it &ndash; take a look)</p>

<h3>Track Talks</h3>

<h4>The Puppet Debugging Kit: Building Blocks for Exploration and Problem Solving &ndash; Charlie Sharpsteen, Puppet Labs (<a href="https://twitter.com/csharpsteen">@csharpsteen</a>) &ndash; <a href="http://www.slideshare.net/PuppetLabs/the-puppet-debugging-kit-building-blocks-for-exploration-and-problem-solving-charlie-sharpsteen-puppet-labs">Slides</a></h4>

<p>Interesting tool, has some cross-over with the Beaker testing tool. PDK is more for focused manual testing rather than automated acceptance tests.</p>

<ul>
<li><a href="https://github.com/Sharpie/puppet-debugging-kit">https://github.com/Sharpie/puppet-debugging-kit</a></li>
<li>vagrant + oscar (<a href="https://github.com/adrienthebo/oscar">https://github.com/adrienthebo/oscar</a>)</li>
<li>oscar is a collection of vagrant plugins</li>
<li>vagrant-config_builder &ndash;> adds role to share vagrant config  (similar to the beaker nodeset file)</li>
<li>PDK is a set of oscar roles</li>
<li>facter / hiera and Puppet running off GitHub</li>
<li>beaker vs oscar &ndash; oscar is optimised for manual testing. There is room to share stuff here.</li>
</ul>


<h4>Cloudy with a Chance of Fireballs: Provisioning and Certificate Management in Puppet &ndash; Eric Sorenson (<a href="https://twitter.com/ahpook">@ahpook</a>), Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/sorenson-fireballspuppet-conf2014">Slides</a></h4>

<ul>
<li>Apple iCloud uses Puppet + autosign</li>
<li>auto sign doesn&rsquo;t work very well for the cloud</li>
<li>Amazon IAM can be applied by machines &ndash; IAM so instance can read it’s own tags (if it has ec2-client-utils installed)</li>
<li>puts instance_id, ami_id and role into /etc/puppet/csr_attriubutes.yaml</li>
<li>can validate the metadata in the cert using x509</li>
<li>true_node_data = true &amp; immutable_node_data = true</li>
<li>closes security hole of setting certname to fact on agent</li>
</ul>


<h4>Beaker: Automated, Cloud-Based Acceptance Testing &ndash; Alice Nodelman (<a href="https://twitter.com/alicenode">@alicenode</a>), Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/beaker-automated-cloudbased-acceptance-testing-puppetconf-2014">Slides</a></h4>

<p>Having contributed to this tool, I was a little bias in attending this talk. Still plenty of interesting new things that came up though.
If you haven’t heard of beaker yet you will also be interested in our <a href="http://tech.opentable.co.uk/blog/2014/04/04/testing-puppet-with-beaker/">previous blog post</a>.</p>

<ul>
<li>basic introduction to what beaker is and how to use it.</li>
<li>rspec vs test dsl &ndash; both are still supported methods of writing tests.</li>
<li>junit export &ndash; useful when integrating with Jenkins</li>
<li><code>on host as</code> &ndash; is a feature that is coming soon so that you can run a command on a host with a given user account</li>
</ul>


<h4>Puppet Language 4.0 &ndash; Henrik Lindberg (<a href="https://twitter.com/hel">@hel</a>), Puppet Labs  &ndash; <a href="http://www.slideshare.net/PuppetLabs/puppet-language-40-puppetconf-2014">Slides</a></h4>

<p>Lots and lots of interesting information here about the new Puppet 4 syntax and jokes about some of the terrible edge cases of the past. It is good to
know now that with Puppet 4 there is a formal specification for the language so we should no longer see these sorts of weird edge cases of the past.
There are also lots of new features in the language: some to deal with long standing pain points (interation), some to help in the move away from ruby
(Puppet templates) and some to prevent authors themselves writing buggy manifests (the type system). Puppet 4 is going to be an exciting this to use.</p>

<ul>
<li>pain-points / cleanup (specification)

<ul>
<li>numbers are numbers (and not strings)</li>
<li>Type references</li>
</ul>
</li>
<li>heredoc</li>
<li>Puppet templates</li>
<li>iteration (each, map, filter, reduce, slice, with)</li>
<li>local defaults</li>
<li>Type system</li>
</ul>


<h4>7 Puppet Horror Stories in 7 Years &ndash; Kris Buytaert (<a href="https://twitter.com/KrisBuytaert">@KrisBuytaert</a>), Inuits &ndash; <a href="http://www.slideshare.net/KrisBuytaert/7-years-of-puppet-horror-stories">Slides</a></h4>

<p>This was more of an interactive talk, trying to get members of the audience to try and predict what the actual problem was. For more senior Puppetiers
this was a fun talk, reminding us of the challenges many of us have faced. For newer Puppet developers this was likely acting as a good warning and
foreshadowing of things that may arise if your not careful (or are very unlucky).</p>

<ul>
<li>SSL</li>
<li>Full Disk</li>
<li>Puppet Bugs</li>
<li>DNS (everything is a DNS problem)</li>
</ul>


<h4>Killer R10K Workflow &ndash; Phil Zimmerman (<a href="https://twitter.com/phil_zimmerman">@phil_zimmerman</a>), Time Warner Cable &ndash; <a href="http://www.slideshare.net/PuppetLabs/killer-r10k-39571913">Slides</a></h4>

<p>This was a good introduction to r10k and the reasons you would want to use it. The workflow is pretty straightforward and I think that for anyone managing Puppet at scale this is going to be something to look at.</p>

<ul>
<li>some good use cases for r10k

<ul>
<li>upgrading modules</li>
<li>not having to wait for all role tests to run</li>
<li>deploying everything to all masters (even hiera)</li>
</ul>
</li>
<li>workflow

<ul>
<li>ci per module</li>
<li>release job per module (tags)</li>
<li>deploy job per module (cap task to wrap r10k for masters/nodes)</li>
</ul>
</li>
</ul>


<h3>Other Talks from the Day</h3>

<ul>
<li>Infrastructure-as-Code with Puppet Enterprise in the Cloud &ndash; Evan Scheessele, HP &ndash; <a href="http://www.slideshare.net/PuppetLabs/infrastructure-ascode-with-puppet-enterprise-in-the-cloud-evan-scheessele-hp">Slides</a></li>
<li>Getting Started with Puppet &ndash; Michael Stahnke, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/getting-started-with-puppet-puppetconf-2014">Slides</a></li>
<li>Plan, Deploy &amp; Manage Modern Applications Leveraging vCloud Automation Center and Puppet &ndash; Pradnesh Patil, VMware &ndash; <a href="http://www.slideshare.net/PuppetLabs/plan-deploy-manage-modern-applications-leveraging-vcloud-automation-center-and-puppet-puppetconf-2014">Slides</a></li>
<li>Writing and Publishing Puppet Modules &ndash; Colleen Murphy, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/writing-and-publishing-puppet-modules-colleen-murphy-puppet-labs">Slides</a></li>
<li>To the Future! &ndash; Goals for Puppet 4 &ndash; Andrew Parker, Puppet Labs &amp; Kylo Ginsberg, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/to-the-future-goals-for-puppet-and-facter-1">Slides</a></li>
<li>Managing and Scaling Puppet &ndash; Miguel Zuniga, Symantec &ndash; <a href="http://www.slideshare.net/PuppetLabs/managing-and-scaling-puppet-puppetconf-2014-39542923">Slides</a></li>
<li>What Developers and Operations Can Learn from Design: 6 Ways to Work Better Together &ndash; Ashley Hathaway, IBM Watson &ndash; <a href="http://www.slideshare.net/PuppetLabs/what-developers-and-operations-can-learn-from-design-6-ways-to-work-better-together-puppetconf-2014">Slides</a></li>
<li>Performance Tuning Your Puppet Infrastructure &ndash; Nic Benders, New Relic &ndash; <a href="http://www.slideshare.net/PuppetLabs/performance-tuning-your-puppet-infrastructure-nic-benders-new-relic">Slides</a></li>
<li>&ldquo;Sensu and Sensibility&rdquo; &ndash; The Story of a Journey From #monitoringsucks to #monitoringlove &ndash; Tomas Doran, Yelp &ndash; <a href="http://www.slideshare.net/PuppetLabs/130pm-210pm-tomas-doran-track-1-puppetconf2014-sensu">Slides</a></li>
<li>DevOps Means Business &ndash; Gene Kim, IT Revolution Press &amp; Nicole Forsgren Velasquez, Utah State University &ndash; <a href="http://www.slideshare.net/PuppetLabs/devops-means-business-gene-kim-it-revolution-press-nicole-forsgren-velasquez-utah-state-university">Slides</a></li>
<li>Auditing/Security with Puppet &ndash; Robert Maury, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/auditingsecurity-with-puppet-puppetconf-2014">Slides</a></li>
<li>Absolute Beginners Guide to Puppet Through Types &ndash; Igor Galić, Brainsware OG &ndash; <a href="http://www.slideshare.net/PuppetLabs/absolute-beginners-guide-to-puppet-through-types-igor-galic-brainsware-og">Slides</a></li>
<li>Plugging Chocolatey into Your Puppet Infrastructure &ndash; Rob Reynolds, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/plugging-chocolatey-into-your-puppet-infrastructure-rob-reynolds-puppet-labs">Slides</a></li>
<li>PuppetDB: One Year Faster &ndash; Deepak Giridharagopal, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/puppetconf-2014">Slides</a></li>
<li>The Puppet Community: Current State and Future Plans &ndash; Dawn Foster, Puppet Labs &amp; Kara Sowles, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/the-puppet-community-current-state-and-future-plans-dawn-foster-puppet-labs-kara-sowles-puppet-labs">Slides</a></li>
<li>Continuous Delivery of Puppet-Based Infrastructure &ndash; Sam Kottler, Digital Ocean &ndash; <a href="http://www.slideshare.net/PuppetLabs/continuous-delivery-of-puppetbased-infrastructure-puppetconf-2014">Slides</a></li>
<li>The Seven Habits of Highly Effective Puppet Users &ndash; David Danzilio, Constant Contact &ndash; <a href="http://www.slideshare.net/PuppetLabs/the-seven-habits-of-highly-effective-puppet-users-puppetconf-2014">Slides</a></li>
<li>Fact-Based Monitoring &ndash; Alexis Le-Quoc, Datadog &ndash; <a href="http://www.slideshare.net/PuppetLabs/fact-based-monitoring-puppetconf-2014">Slides</a></li>
<li>Test-Driven Puppet Development &ndash; Nan Liu, Bodeco &ndash; <a href="http://www.slideshare.net/PuppetLabs/testdriven-puppet-development-puppetconf-2014">Slides</a></li>
<li>A Practical Guide to Modules &ndash; Lauren Rother, Puppet Labs &amp; Morgan Haskel, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/a-practical-guide-to-modules-lauren-rother-puppet-labs-morgan-haskel-puppet-labs">Slides</a></li>
<li>Leveraging the PuppetDB API: Puppetboard &ndash; Daniele Sluijters, Nedap</li>
<li>Puppet Availability and Performance at 100K Nodes &ndash; John Jawed, eBay/PayPal &ndash; <a href="http://www.slideshare.net/PuppetLabs/puppet-availability-and-performance-at-100k-nodes-puppetconf-2014">Slides</a></li>
<li>DevOps and Software Defined Networking &ndash; John Willis, Pacific Crest</li>
<li>Razor, the Provisioning Toolbox &ndash; David Lutterkort, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/razor-the-provisioning-toolbox-puppetconf-2014">Slides</a></li>
<li>How to Puppetize Google Cloud Platform &ndash; Katharina Probst, Google, Matt Bookman, Google &amp; Ryan Coleman, Puppet Labs &ndash; <a href="http://www.slideshare.net/PuppetLabs/how-to-puppetize-google-cloud-platform-katharina-e">Slides</a></li>
<li>Continuous Infrastructure: Modern Puppet for the Jenkins Project &ndash; R.Tyler Croy, Jenkins &ndash; <a href="http://www.slideshare.net/PuppetLabs/continuous-infrastructure-modern-puppet-for-the-jenkins-project-rtyler-croy-jenkins">Slides</a></li>
<li>How to Measure Everything: A Million Metrics Per Second with Minimal Developer Overhead &ndash; Jos Boumans, Krux &ndash; <a href="http://www.slideshare.net/PuppetLabs/how-to-measure-everything-a-million-metrics-per-second-with-minimal-developer-overhead-puppetco">Slides</a></li>
<li>How to Open Source Your Puppet Configuration &ndash; Elizabeth Krumbach Joseph, HP &ndash; <a href="http://www.slideshare.net/PuppetLabs/how-to-open-source-your-puppet-configuration-elizabeth-krumbach-joseph-hp">Slides</a></li>
<li>Manageable Puppet Infrastructure &ndash; Ger Apeldoorn, Freelance Puppet Consultant &ndash; <a href="http://www.slideshare.net/PuppetLabs/manageable-puppet-infrastructure-ger-apeldoorn-freelance-puppet-consultant">Slides</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PuppetConf 2014 - Part 1]]></title>
    <link href="http://tech.opentable.co.uk/blog/2014/10/06/puppetconf-2014-part-1/"/>
    <updated>2014-10-06T11:47:57+01:00</updated>
    <id>http://tech.opentable.co.uk/blog/2014/10/06/puppetconf-2014-part-1</id>
    <content type="html"><![CDATA[<p><img src="/images/posts/puppetconf2014.jpg" alt="The start of PuppetConf 2014" /></p>

<p>It has been one week since our attendance at this years PuppetConf and we have just now caught up on all the great talks that were
given and the projects demonstrated over the 3 day period. Here&rsquo;s our summary of the event (split into 3 parts), hopefully you will
find as much inspiration in the content as we have.</p>

<h2>Day 0 &ndash; Contributor Summit</h2>

<p>For the first time, this years Puppet Contributor Summit was held the day prior to the conference itself and I think this was a great idea.
Most of the Puppetlabs staff and many of the high profile community members were in town for PuppetConf anyway so it made sense. There was
roughly 60-70 people in attendance both senior contributors and people new to the community so it was a great mix that led to some
fantastic discussions.</p>

<p>The day itself had two tracks: a module track for forge modules and a core track for people contributing to puppet and factor.</p>

<p>Those of you who have seen our <a href="http://forge.puppetlabs.com/opentable">forge module page</a> will understand why we chose to stay in the module track.
Although I heard there were many great discussions to be had with regards to Puppet 4 in the core track.</p>

<p>Each track was split into three sections: a brief introduction from the track lead Ryan Coleman (<a href="https://twitter.com/ryanycoleman">@ryanycoleman</a>),
followed by some lighting talks and then several hours of hacking and open discussions.</p>

<h3>Lightning Talks:</h3>

<p>Here is a quick overview of the lightening talks from the module track:</p>

<h4>Puppet Analytics (Spencer Krum <a href="https://twitter.com/nibalizer">@nibalizer</a>)</h4>

<p>Spencer gave a quick demonstration of his latest project <a href="http://puppet-analytics.org/">puppet-analytics</a>. This problem that this tool was aiming to
solve was that at the present time the are no good analytics for the forge modules. The number of downloads listed for each module is very inaccurate
and can be easily inflated by (for example) an automated CI process. The point of this web app and it’s corresponding client
<a href="https://github.com/nibalizer/puppet-analytics-client">puppet-analytics-client</a> was to be built into an existing tool chain and for end users to report
which modules and versions they were using. It also has the added benefit that we could also get stats for teams using private forges.</p>

<p>Ryan also commented that PuppetLabs has some metrics it uses for it’s own modules that can be found here:
<a href="http://forge-module-metrics.herokuapp.com/">http://forge-module-metrics.herokuapp.com/</a></p>

<h4>Puppet Community (Daniele Sluijters <a href="https://twitter.com/daenney">@daenney</a>)</h4>

<p>Discussion of the shared namespace for community modules: <a href="http://puppet-community.github.io/">puppet-community</a>. This talk was about a community project
to keep modules in a shared namespace so that everyone can work on them independent of company ownership. There are limitations right now with with
regards to the forge e.g. no shared accounts and no easy migration path to move modules between namespaces but working with Ryan on that.</p>

<p>This is how the boxen project works and it seems to work pretty well.</p>

<h4>Beaker Testing Windows Environments (Liam Bennett <a href="https://twitter.com/liamjbennett">@liamjbennett</a>) &ndash; me!!</h4>

<p>My talk on hacking beaker to work better for testing windows environments.</p>

<p>Demos and PRs. Discussed more in some of our earlier posts: <a href="http://tech.opentable.co.uk/blog/2014/09/01/testing-puppet-with-beaker-pt-dot-2-the-windows-story/">Testing Puppet with Beaker pt.2 &ndash; The Windows story</a>
and <a href="http://tech.opentable.co.uk/blog/2014/09/01/testing-puppet-with-beaker-pt-dot-3-testing-roles/">Testing Puppet with Beaker pt.3 &ndash; Testing Roles</a></p>

<h4>Module Anti-Patterns (Peter Souter <a href="https://twitter.com/petems">@petems</a>) &ndash; <a href="http://www.slideshare.net/petems/puppet-module-anti-patterns">Slides</a></h4>

<p>Some interesting patterns here that are still quite preverlant in the modules found on the forge. Hopefully improved tooling and the new Puppet Approved
program will help here.</p>

<h4>Puppetlabs ModuleSync tool (Colleen Murphy <a href="https://twitter.com/pdx_krinkle">@pdx_krinkle</a>)</h4>

<p>A demonstration of the the tool <a href="https://github.com/puppetlabs/modulesync">puppetlabs-modulesync</a> which aims to take out some of the pain of managing common
static build files across a number of modules (e.g. a common Rakefile or .travis.yml which the same across almost all modules)</p>

<p>Having used this on a number of our modules now I can say that this in extremely useful and I don’t know how we managed without it. A key use case for us was
adding support for puppet 3.7 into our test matrix of our travis.yml file. 1 line change &ndash; 1 command &ndash; 18 modules updated.</p>

<h4>Strict Variables (Tomas Doran <a href="https://twitter.com/bobtfish">@bobtfish</a>)</h4>

<p>Tomas has one very good point to make here: enable <a href="https://docs.puppetlabs.com/references/latest/configuration.html#strictvariables">strict_variables</a>. Many
languages have a strict option and Puppet’s makes sure to check for those unknown variable references. The latest version of the
<a href="https://github.com/puppetlabs/puppetlabs_spec_helper">puppetlabs_spec_helper</a> supports adding this setting with an environment variable so that you can now
add this into your testing matrix.</p>

<p>We have enabled this on our open source modules and it did indeed surfice a few bugs so go and do it now.</p>

<h4>Puppet Documentation Linting (Peter Souter <a href="https://twitter.com/petems">@petems</a>)</h4>

<p>While we have very good linking for our puppet manifests themselves thanks to the <a href="http://puppet-lint.com/">puppet-lint</a> project. We still do not have any
coverage for our documentation of those manifests. That is where Peter’s <a href="https://github.com/petems/puppet-doc-lint">puppet-doc-lint</a> project comes in and aims
to lint each of you manifests for correct rdoc documentation.</p>

<p>This only supports puppet 3.4.3 right now but it is a useful tool and demonstrations something functional in an area that is missing from the current crop of
community tooling. This is going to become more useful as we want to have good documentation for Puppet Approved status.</p>

<p>It is also worth noting that PuppetLabs themselves have been doing some work in this area with
<a href="https://github.com/puppetlabs/puppetlabs-strings/">puppet-strings</a>. This projects works on puppet 3.6 + and support yard doc but is roughly the same idea.</p>

<h4>Quick Survey (Michael Stahnke <a href="https://twitter.com/stahnma">@stahnma</a>)</h4>

<p>Michael here decided to use the opportunity of having everyone in the room to ask a few questions regarding the state of puppet use and the platforms it’s
deployed on. Not too many surprises here: Debian (mostly ubuntu 12) and RedHat (mostly centos 6) dominate with a small grouping of other platforms like AIX and
Solaris in toe. Some poor individuals still have ubuntu 8 and 10 in production but I won’t name name’s because we have all been in that position before. No
mention of windows but then I did bring that up in my own talk so I think that was covered already.</p>

<h3>Hacking and Discussions</h3>

<p>The second part of the day was the hacking and discussions part. This was more un-conference style with variables tables put together to discuss various topics,
try and resolves issues or hack on projects. There were four main areas that I noticed: module testing, windows, docker, forge improvements (apologies if I
missed your topic/table).</p>

<h4>Module Testing</h4>

<p>This was probably the most common topic and several tables were set up around this idea but a huge range of things were discussed. Some people wanted to know
about how to get up and running with beaker tests using vagrant+vagrant cloud, some wanted to discuss specific platform issues (windows, docker, solaris), other
 wanted to discuss how best to scale out the tests once you have them.</p>

<p>There was some discussion based around the tools like puppet-doc-lint that were demonstrated during the lightning talks and it’s good to see these missing
aspects of the testing tool chain getting some light.</p>

<p>It’s nice to think that we have moved to this stage now where we have all the tools to support a full development tool chain for puppet and that most of the
discussion was around improving and maturing what we have.</p>

<h4>Docker</h4>

<p>Docker is one of those tools that can be considered the latest hotness so it’s no surprise that it gained some interest here also. Many people wanted to see it
in use and demonstrated and to discuss it’s use either from the point of view of being able to test with it or test against it.</p>

<p>I see this topic getting a lot more coverage in the future as more and more teams move into this space.</p>

<h4>Windows</h4>

<p>Led by myself, Drewi Wilson and Travis Fields (<a href="https://twitter.com/tefields">@tefields</a>) the two aims for this discussion were to gather input/feedback from people using
the existing windows modules and to try and discover areas in the windows ecosystem that were not currently managed (either well or at all) by Puppet.</p>

<p>We got some fantastic feedback we got regarding our OpenTable modules &ndash; thank you to everyone who was there any everyone else who reached out about that.</p>

<p>We also managed to start to populate a list of things that need some work. You can contribute to that list
<a href="https://docs.google.com/document/d/1bwgTo4D7lL8REA1s-IIKlfMrvY434Xn0cyZ7b1X-TwQ">here</a></p>

<p>There was also some discussion of using MCollective on Windows. This has been a little painful in the past (I should blog about this in the future) but it will
be getting a little more love going forward. Generally PuppetLabs is very aware of the orchestration space and will be looking into solving this problem with
it’s tools going forward.</p>

<h4>Forge Improvements</h4>

<p>Given that this was the Module track it was obvious that at some point we would all want to discuss improvement that we would want to see in the puppet forge. Ryan
led the table here and there was lots of be said by all.</p>

<p>A couple of interesting documents emerged that you might be interested in:</p>

<ul>
<li><a href="https://docs.google.com/document/d/1N8U_8UnIGFHC1Q6aTyLgx1d6wvvjuyTT1EO-OYSIu3k">Suggestions for the Puppet Approved module criteria</a></li>
<li><a href="https://docs.google.com/document/d/1gwoM8xHnWaRQ3Jqce0oursI_ts5BWnHEUVXRQuIh6Yk">Forge Improvements</a></li>
</ul>


<p>There was also some discussion of how best to pull stats out from the forge. Many people either scrape the API, use the API to take a dump of the whole of the forge
but none of these approaches are best for either the user or for the forge site itself. PuppetLabs uses various approaches to this internally depending on the use
case. Such use cases include: &ldquo;who is using my module?&rdquo; or &ldquo;who is using the bit of code?&rdquo;. There should be improvements to the forge to make answering these sorts
of questions a little easier in the future.</p>

<h2>Summary</h2>

<p>The contributor summit was personally one of the most useful days of the conference. Being able to see the lastest tooling and discuss the latest problems is always
very useful to module authors like ourselves. Hopefully you&rsquo;ll find this summary as useful as we do.</p>

<p>Next up Day 1 &ndash; PuppetConf proper..</p>
]]></content>
  </entry>
  
</feed>
